name: ci

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  id-token: write   # needed for OIDC
  contents: read

jobs:
  cdk-synth:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::590807097490:role/PceCICDDeployRole
          aws-region: eu-north-1

      - run: echo "✅ CI wiring OK – starting synth"
      - run: pnpm install --frozen-lockfile
      - run: pnpm --filter @pce/infra run cdk synth

  resolve-digest:
    runs-on: ubuntu-latest
    needs: cdk-synth
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::590807097490:role/PceCICDDeployRole
          aws-region: eu-north-1

      - name: Resolve latest ECR digest
        id: digest
        run: |
          DIGEST=$(aws ecr describe-images \
            --repository-name pce-api-dev \
            --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageDigest' \
            --output text)
          echo "PCE_IMAGE_DIGEST=$DIGEST" >> $GITHUB_ENV
          echo "Resolved digest: $DIGEST"

  deploy:
    runs-on: ubuntu-latest
    needs: resolve-digest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::590807097490:role/PceCICDDeployRole
          aws-region: eu-north-1

      - run: pnpm install --frozen-lockfile
      - run: |
          pnpm --filter @pce/infra run cdk deploy PceApp-dev \
            --require-approval never \
            -c PCE_IMAGE_DIGEST=${{ env.PCE_IMAGE_DIGEST }}
